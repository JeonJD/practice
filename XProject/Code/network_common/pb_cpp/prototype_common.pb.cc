// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prototype_common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "prototype_common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb_prototype {
class UnitIdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnitId> {
} _UnitId_default_instance_;
class PlayerUnitDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PlayerUnitData> {
} _PlayerUnitData_default_instance_;
class NPCUnitDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NPCUnitData> {
} _NPCUnitData_default_instance_;

namespace protobuf_prototype_5fcommon_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitId, unit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitId, unit_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerUnitData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerUnitData, unit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerUnitData, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NPCUnitData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NPCUnitData, unit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NPCUnitData, name_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(UnitId)},
  { 7, -1, sizeof(PlayerUnitData)},
  { 14, -1, sizeof(NPCUnitData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnitId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerUnitData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NPCUnitData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "prototype_common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _UnitId_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PlayerUnitData_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _NPCUnitData_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UnitId_default_instance_.DefaultConstruct();
  _PlayerUnitData_default_instance_.DefaultConstruct();
  _NPCUnitData_default_instance_.DefaultConstruct();
  _PlayerUnitData_default_instance_.get_mutable()->unit_id_ = const_cast< ::pb_prototype::UnitId*>(
      ::pb_prototype::UnitId::internal_default_instance());
  _NPCUnitData_default_instance_.get_mutable()->unit_id_ = const_cast< ::pb_prototype::UnitId*>(
      ::pb_prototype::UnitId::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\026prototype_common.proto\022\014pb_prototype\","
      "\n\006UnitId\022\021\n\tunit_type\030\001 \001(\r\022\017\n\007unit_id\030\002"
      " \001(\r\"E\n\016PlayerUnitData\022%\n\007unit_id\030\001 \001(\0132"
      "\024.pb_prototype.UnitId\022\014\n\004name\030\002 \001(\t\"B\n\013N"
      "PCUnitData\022%\n\007unit_id\030\001 \001(\0132\024.pb_prototy"
      "pe.UnitId\022\014\n\004name\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 231);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "prototype_common.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_prototype_5fcommon_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnitId::kUnitTypeFieldNumber;
const int UnitId::kUnitIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnitId::UnitId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_prototype_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb_prototype.UnitId)
}
UnitId::UnitId(const UnitId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&unit_type_, &from.unit_type_,
    reinterpret_cast<char*>(&unit_id_) -
    reinterpret_cast<char*>(&unit_type_) + sizeof(unit_id_));
  // @@protoc_insertion_point(copy_constructor:pb_prototype.UnitId)
}

void UnitId::SharedCtor() {
  ::memset(&unit_type_, 0, reinterpret_cast<char*>(&unit_id_) -
    reinterpret_cast<char*>(&unit_type_) + sizeof(unit_id_));
  _cached_size_ = 0;
}

UnitId::~UnitId() {
  // @@protoc_insertion_point(destructor:pb_prototype.UnitId)
  SharedDtor();
}

void UnitId::SharedDtor() {
}

void UnitId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnitId::descriptor() {
  protobuf_prototype_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_prototype_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnitId& UnitId::default_instance() {
  protobuf_prototype_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnitId* UnitId::New(::google::protobuf::Arena* arena) const {
  UnitId* n = new UnitId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnitId::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_prototype.UnitId)
  ::memset(&unit_type_, 0, reinterpret_cast<char*>(&unit_id_) -
    reinterpret_cast<char*>(&unit_type_) + sizeof(unit_id_));
}

bool UnitId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb_prototype.UnitId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 unit_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unit_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unit_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb_prototype.UnitId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb_prototype.UnitId)
  return false;
#undef DO_
}

void UnitId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb_prototype.UnitId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 unit_type = 1;
  if (this->unit_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->unit_type(), output);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unit_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb_prototype.UnitId)
}

::google::protobuf::uint8* UnitId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_prototype.UnitId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 unit_type = 1;
  if (this->unit_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->unit_type(), target);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unit_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb_prototype.UnitId)
  return target;
}

size_t UnitId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_prototype.UnitId)
  size_t total_size = 0;

  // uint32 unit_type = 1;
  if (this->unit_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unit_type());
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unit_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnitId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb_prototype.UnitId)
  GOOGLE_DCHECK_NE(&from, this);
  const UnitId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnitId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb_prototype.UnitId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb_prototype.UnitId)
    MergeFrom(*source);
  }
}

void UnitId::MergeFrom(const UnitId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb_prototype.UnitId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.unit_type() != 0) {
    set_unit_type(from.unit_type());
  }
  if (from.unit_id() != 0) {
    set_unit_id(from.unit_id());
  }
}

void UnitId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb_prototype.UnitId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitId::CopyFrom(const UnitId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_prototype.UnitId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitId::IsInitialized() const {
  return true;
}

void UnitId::Swap(UnitId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnitId::InternalSwap(UnitId* other) {
  std::swap(unit_type_, other->unit_type_);
  std::swap(unit_id_, other->unit_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnitId::GetMetadata() const {
  protobuf_prototype_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_prototype_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnitId

// uint32 unit_type = 1;
void UnitId::clear_unit_type() {
  unit_type_ = 0u;
}
::google::protobuf::uint32 UnitId::unit_type() const {
  // @@protoc_insertion_point(field_get:pb_prototype.UnitId.unit_type)
  return unit_type_;
}
void UnitId::set_unit_type(::google::protobuf::uint32 value) {
  
  unit_type_ = value;
  // @@protoc_insertion_point(field_set:pb_prototype.UnitId.unit_type)
}

// uint32 unit_id = 2;
void UnitId::clear_unit_id() {
  unit_id_ = 0u;
}
::google::protobuf::uint32 UnitId::unit_id() const {
  // @@protoc_insertion_point(field_get:pb_prototype.UnitId.unit_id)
  return unit_id_;
}
void UnitId::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:pb_prototype.UnitId.unit_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerUnitData::kUnitIdFieldNumber;
const int PlayerUnitData::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerUnitData::PlayerUnitData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_prototype_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb_prototype.PlayerUnitData)
}
PlayerUnitData::PlayerUnitData(const PlayerUnitData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_unit_id()) {
    unit_id_ = new ::pb_prototype::UnitId(*from.unit_id_);
  } else {
    unit_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb_prototype.PlayerUnitData)
}

void PlayerUnitData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_id_ = NULL;
  _cached_size_ = 0;
}

PlayerUnitData::~PlayerUnitData() {
  // @@protoc_insertion_point(destructor:pb_prototype.PlayerUnitData)
  SharedDtor();
}

void PlayerUnitData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete unit_id_;
  }
}

void PlayerUnitData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerUnitData::descriptor() {
  protobuf_prototype_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_prototype_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerUnitData& PlayerUnitData::default_instance() {
  protobuf_prototype_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerUnitData* PlayerUnitData::New(::google::protobuf::Arena* arena) const {
  PlayerUnitData* n = new PlayerUnitData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerUnitData::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_prototype.PlayerUnitData)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && unit_id_ != NULL) {
    delete unit_id_;
  }
  unit_id_ = NULL;
}

bool PlayerUnitData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb_prototype.PlayerUnitData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb_prototype.UnitId unit_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unit_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb_prototype.PlayerUnitData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb_prototype.PlayerUnitData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb_prototype.PlayerUnitData)
  return false;
#undef DO_
}

void PlayerUnitData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb_prototype.PlayerUnitData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb_prototype.UnitId unit_id = 1;
  if (this->has_unit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->unit_id_, output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb_prototype.PlayerUnitData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb_prototype.PlayerUnitData)
}

::google::protobuf::uint8* PlayerUnitData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_prototype.PlayerUnitData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb_prototype.UnitId unit_id = 1;
  if (this->has_unit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->unit_id_, deterministic, target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb_prototype.PlayerUnitData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb_prototype.PlayerUnitData)
  return target;
}

size_t PlayerUnitData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_prototype.PlayerUnitData)
  size_t total_size = 0;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .pb_prototype.UnitId unit_id = 1;
  if (this->has_unit_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->unit_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerUnitData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb_prototype.PlayerUnitData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerUnitData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerUnitData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb_prototype.PlayerUnitData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb_prototype.PlayerUnitData)
    MergeFrom(*source);
  }
}

void PlayerUnitData::MergeFrom(const PlayerUnitData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb_prototype.PlayerUnitData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_unit_id()) {
    mutable_unit_id()->::pb_prototype::UnitId::MergeFrom(from.unit_id());
  }
}

void PlayerUnitData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb_prototype.PlayerUnitData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerUnitData::CopyFrom(const PlayerUnitData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_prototype.PlayerUnitData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerUnitData::IsInitialized() const {
  return true;
}

void PlayerUnitData::Swap(PlayerUnitData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerUnitData::InternalSwap(PlayerUnitData* other) {
  name_.Swap(&other->name_);
  std::swap(unit_id_, other->unit_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerUnitData::GetMetadata() const {
  protobuf_prototype_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_prototype_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerUnitData

// .pb_prototype.UnitId unit_id = 1;
bool PlayerUnitData::has_unit_id() const {
  return this != internal_default_instance() && unit_id_ != NULL;
}
void PlayerUnitData::clear_unit_id() {
  if (GetArenaNoVirtual() == NULL && unit_id_ != NULL) delete unit_id_;
  unit_id_ = NULL;
}
const ::pb_prototype::UnitId& PlayerUnitData::unit_id() const {
  // @@protoc_insertion_point(field_get:pb_prototype.PlayerUnitData.unit_id)
  return unit_id_ != NULL ? *unit_id_
                         : *::pb_prototype::UnitId::internal_default_instance();
}
::pb_prototype::UnitId* PlayerUnitData::mutable_unit_id() {
  
  if (unit_id_ == NULL) {
    unit_id_ = new ::pb_prototype::UnitId;
  }
  // @@protoc_insertion_point(field_mutable:pb_prototype.PlayerUnitData.unit_id)
  return unit_id_;
}
::pb_prototype::UnitId* PlayerUnitData::release_unit_id() {
  // @@protoc_insertion_point(field_release:pb_prototype.PlayerUnitData.unit_id)
  
  ::pb_prototype::UnitId* temp = unit_id_;
  unit_id_ = NULL;
  return temp;
}
void PlayerUnitData::set_allocated_unit_id(::pb_prototype::UnitId* unit_id) {
  delete unit_id_;
  unit_id_ = unit_id;
  if (unit_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb_prototype.PlayerUnitData.unit_id)
}

// string name = 2;
void PlayerUnitData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerUnitData::name() const {
  // @@protoc_insertion_point(field_get:pb_prototype.PlayerUnitData.name)
  return name_.GetNoArena();
}
void PlayerUnitData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb_prototype.PlayerUnitData.name)
}
#if LANG_CXX11
void PlayerUnitData::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb_prototype.PlayerUnitData.name)
}
#endif
void PlayerUnitData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb_prototype.PlayerUnitData.name)
}
void PlayerUnitData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb_prototype.PlayerUnitData.name)
}
::std::string* PlayerUnitData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb_prototype.PlayerUnitData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerUnitData::release_name() {
  // @@protoc_insertion_point(field_release:pb_prototype.PlayerUnitData.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerUnitData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb_prototype.PlayerUnitData.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NPCUnitData::kUnitIdFieldNumber;
const int NPCUnitData::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NPCUnitData::NPCUnitData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_prototype_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb_prototype.NPCUnitData)
}
NPCUnitData::NPCUnitData(const NPCUnitData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_unit_id()) {
    unit_id_ = new ::pb_prototype::UnitId(*from.unit_id_);
  } else {
    unit_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb_prototype.NPCUnitData)
}

void NPCUnitData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_id_ = NULL;
  _cached_size_ = 0;
}

NPCUnitData::~NPCUnitData() {
  // @@protoc_insertion_point(destructor:pb_prototype.NPCUnitData)
  SharedDtor();
}

void NPCUnitData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete unit_id_;
  }
}

void NPCUnitData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NPCUnitData::descriptor() {
  protobuf_prototype_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_prototype_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NPCUnitData& NPCUnitData::default_instance() {
  protobuf_prototype_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

NPCUnitData* NPCUnitData::New(::google::protobuf::Arena* arena) const {
  NPCUnitData* n = new NPCUnitData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NPCUnitData::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_prototype.NPCUnitData)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && unit_id_ != NULL) {
    delete unit_id_;
  }
  unit_id_ = NULL;
}

bool NPCUnitData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb_prototype.NPCUnitData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb_prototype.UnitId unit_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unit_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb_prototype.NPCUnitData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb_prototype.NPCUnitData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb_prototype.NPCUnitData)
  return false;
#undef DO_
}

void NPCUnitData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb_prototype.NPCUnitData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb_prototype.UnitId unit_id = 1;
  if (this->has_unit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->unit_id_, output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb_prototype.NPCUnitData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb_prototype.NPCUnitData)
}

::google::protobuf::uint8* NPCUnitData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_prototype.NPCUnitData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb_prototype.UnitId unit_id = 1;
  if (this->has_unit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->unit_id_, deterministic, target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb_prototype.NPCUnitData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb_prototype.NPCUnitData)
  return target;
}

size_t NPCUnitData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_prototype.NPCUnitData)
  size_t total_size = 0;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .pb_prototype.UnitId unit_id = 1;
  if (this->has_unit_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->unit_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NPCUnitData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb_prototype.NPCUnitData)
  GOOGLE_DCHECK_NE(&from, this);
  const NPCUnitData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NPCUnitData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb_prototype.NPCUnitData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb_prototype.NPCUnitData)
    MergeFrom(*source);
  }
}

void NPCUnitData::MergeFrom(const NPCUnitData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb_prototype.NPCUnitData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_unit_id()) {
    mutable_unit_id()->::pb_prototype::UnitId::MergeFrom(from.unit_id());
  }
}

void NPCUnitData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb_prototype.NPCUnitData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NPCUnitData::CopyFrom(const NPCUnitData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_prototype.NPCUnitData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NPCUnitData::IsInitialized() const {
  return true;
}

void NPCUnitData::Swap(NPCUnitData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NPCUnitData::InternalSwap(NPCUnitData* other) {
  name_.Swap(&other->name_);
  std::swap(unit_id_, other->unit_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NPCUnitData::GetMetadata() const {
  protobuf_prototype_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_prototype_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NPCUnitData

// .pb_prototype.UnitId unit_id = 1;
bool NPCUnitData::has_unit_id() const {
  return this != internal_default_instance() && unit_id_ != NULL;
}
void NPCUnitData::clear_unit_id() {
  if (GetArenaNoVirtual() == NULL && unit_id_ != NULL) delete unit_id_;
  unit_id_ = NULL;
}
const ::pb_prototype::UnitId& NPCUnitData::unit_id() const {
  // @@protoc_insertion_point(field_get:pb_prototype.NPCUnitData.unit_id)
  return unit_id_ != NULL ? *unit_id_
                         : *::pb_prototype::UnitId::internal_default_instance();
}
::pb_prototype::UnitId* NPCUnitData::mutable_unit_id() {
  
  if (unit_id_ == NULL) {
    unit_id_ = new ::pb_prototype::UnitId;
  }
  // @@protoc_insertion_point(field_mutable:pb_prototype.NPCUnitData.unit_id)
  return unit_id_;
}
::pb_prototype::UnitId* NPCUnitData::release_unit_id() {
  // @@protoc_insertion_point(field_release:pb_prototype.NPCUnitData.unit_id)
  
  ::pb_prototype::UnitId* temp = unit_id_;
  unit_id_ = NULL;
  return temp;
}
void NPCUnitData::set_allocated_unit_id(::pb_prototype::UnitId* unit_id) {
  delete unit_id_;
  unit_id_ = unit_id;
  if (unit_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb_prototype.NPCUnitData.unit_id)
}

// string name = 2;
void NPCUnitData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NPCUnitData::name() const {
  // @@protoc_insertion_point(field_get:pb_prototype.NPCUnitData.name)
  return name_.GetNoArena();
}
void NPCUnitData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb_prototype.NPCUnitData.name)
}
#if LANG_CXX11
void NPCUnitData::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb_prototype.NPCUnitData.name)
}
#endif
void NPCUnitData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb_prototype.NPCUnitData.name)
}
void NPCUnitData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb_prototype.NPCUnitData.name)
}
::std::string* NPCUnitData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb_prototype.NPCUnitData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NPCUnitData::release_name() {
  // @@protoc_insertion_point(field_release:pb_prototype.NPCUnitData.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NPCUnitData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb_prototype.NPCUnitData.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb_prototype

// @@protoc_insertion_point(global_scope)
